size = 3,
alpha = 0.5)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq,size=freq))) +
geom_point(color = "blue",
size = 3,
alpha = 0.5)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq,size=freq))) +
geom_point(color = "blue",
size = 5,
alpha = 1)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq,size=freq))) +
geom_point(color = "blue",
size = 5,
alpha = 0.5)
bbox_seoul <- c(left = 126.826128, bottom = 37.458073,
right = 127.194848, top = 37.696073)
seoul <- get_stamenmap(bbox = bbox_seoul, zoom = 11, maptype = "toner")
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq,size=freq))) +
geom_point(color = "blue",
size = 5,
alpha = 0.5)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat))) +
geom_point(color = "blue",
size = 5,
alpha = 0.5)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point(color = "blue",
size = 5,
alpha = 0.5)
?gemo_point
?geom_point
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point(data = freq, color = "blue",
size = 5,
alpha = 0.5)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point(data = LatLons$freq, color = "blue",
size = 5,
alpha = 0.5)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point(data = LatLons, color = "blue",
size = 5,
alpha = 0.5)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point( color = "blue",
size = 5,
alpha = 0.5, na.rm=True)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point( color = "blue",
size = 5,
alpha = 0.5, na.rm=TRUE)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point( aes(colour = factor(freq)), color = "blue",
size = 5,
alpha = 0.5, na.rm=TRUE)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point( aes(colour = factor(freq)), color = "blue",
size = 5,
alpha = 0.5, na.rm=TRUE, stroke=5)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point( aes(colour = factor(freq)), color = "blue",
size = 5,
alpha = 0.5, na.rm=TRUE, stroke=1)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point( aes(colour = factor(freq)), color = "blue",
size = 5,
alpha = 0.5, na.rm=TRUE, stroke=2)
center <- c(mean(LatLons$lon), mean(LatLons$lat))
map <- get_map(location =center,maptype="toner", zoom=11)
center <- c(mean(LatLons$lon), mean(LatLons$lat))
map <- get_stamenmap(location =center,maptype="toner", zoom=11)
m1 <- ggmap(map)
m1
center <- c(mean(LatLons$lon), mean(LatLons$lat))
map <- get_map(location =center,maptype="toner", zoom=11)
center <- c(mean(LatLons$lon), mean(LatLons$lat))
map <- get_map(location =center,maptype="watercolor", zoom=11)
library(ggmap)
center <- c(mean(data$lon), mean(data$lat))
[출처] 14. ggmap 응용(3) : 주요도시 인구 표시(get_map, geom_point 활용)|작성자 지그드시
center <- c(mean(data$lon), mean(data$lat))
center <- c(mean(LatLons$lon), mean(LatLons$lat))
map <- get_map(location =center,maptype="watercolor", zoom=7)
bbox_seoul <- c(left = 126.826128, bottom = 37.458073,
right = 127.194848, top = 37.696073)
seoul <- get_stamenmap(bbox = bbox_seoul, zoom = 10, maptype = "toner")
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point( aes(colour = factor(freq)), color = "blue",
size = 5,
alpha = 0.5, na.rm=TRUE, stroke=2)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point(color = freq,
size = freq,
alpha = 0.5, na.rm=TRUE, stroke=2)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point(color = freq,
size = pop,
alpha = 0.5, na.rm=TRUE, stroke=2)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point(color = freq,
size = 5,
alpha = 0.5, na.rm=TRUE, stroke=2)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point(color = 'con',
size = 5,
alpha = 0.5, na.rm=TRUE, stroke=2)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, color=freq))) +
geom_point(color = 'red',
size = 5,
alpha = 0.5, na.rm=TRUE, stroke=2)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat))) +
geom_point(color = 'red',
size = 5,
alpha = 0.5, na.rm=TRUE, stroke=2)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'red') + theme_void()
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=Freq))) +
geom_tile(fill = 'red') + theme_void()
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'red') + theme_void()
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue') + theme_void()
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue')
Metro_month$x = Metro_month$x / 10000
LatLons$freq = Metro_month$x
LatLons
bbox_seoul <- c(left = 126.826128, bottom = 37.458073,
right = 127.194848, top = 37.696073)
seoul <- get_stamenmap(bbox = bbox_seoul, zoom = 10, maptype = "toner")
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue')
Metro_month$x = Metro_month$x / 1000
LatLons$freq = Metro_month$x
LatLons
bbox_seoul <- c(left = 126.826128, bottom = 37.458073,
right = 127.194848, top = 37.696073)
seoul <- get_stamenmap(bbox = bbox_seoul, zoom = 10, maptype = "toner")
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue')
LatLonCounts
bbox_houston <- c(left = -95.65, bottom = 29.55,
right = -95.15, top = 30.00)
houston <- get_stamenmap(bbox = bbox_houston, zoom = 11, maptype = "terrain")
houston <- get_stamenmap(bbox = bbox_houston, zoom = 11, maptype = "toner")
ggmap(houston,
base_layer = ggplot(data = LatLonCounts,
aes(x = Long, y = Lat, alpha = Freq))) +
geom_tile(fill = "red") +
theme_void() +
labs(title = "Heat map of violent crimes",
subtitle = "Houston Jan - Aug 2010",
caption = "source: http://www.houstontx.gov/police/cs/")
LatLonCounts
LatLons
round(LatLons$lat,2)
LatLons
LatLons$lat = round(LatLons$lat,2)
LatLons$lon = round(LatLons$lon,2)
LatLons
str(LatLons)
str(LatLonCounts)
LatLons$freq = as.integer(LatLons$freq)
str(LatLonCounts)
str(LatLons)
LatLons
LatLons = read.csv("metro_coord.csv")
LatLons=LatLons[-1:-2][-2]
LatLons$freq = Metro_month$x
LatLons$lat = round(LatLons$lat,2)
LatLons$lon = round(LatLons$lon,2)
LatLons$freq = as.integer(LatLons$freq)
LatLons
LatLons = read.csv("metro_coord.csv")
LatLons=LatLons[-1:-2][-2]
LatLons$freq = Metro_month$x
LatLons
LatLons
Metro_month$x
#시간별로 있는 유동인구를 날짜별로 통합하기
x=as.matrix(Metro[7:30])
sum=apply(x,1,sum)
Metro_re=Metro[-7:-30]
Metro_re$sum = sum
#7호선 데이터 식별 및 역별 월간 승하차 인원 데이터프레임
Metro_re = Metro_re[(Metro_re$호선 == "7호선"),]
Metro_re = Metro_re[-1:-4][-2]
#역명이 같은 데이터 합하기
Metro_month=aggregate(Metro_re$sum, by=list(Metro_re$역명),sum)
Metro_month
> LatLons$freq = Metro_month$x
> LatLons$lat = round(LatLons$lat,2)
> LatLons$lon = round(LatLons$lon,2)
> LatLons$freq = as.integer(LatLons$freq)
LatLons$freq = Metro_month$x
LatLons$lat = round(LatLons$lat,2)
LatLons$lon = round(LatLons$lon,2)
LatLons$freq = as.integer(LatLons$freq)
LatLons
bbox_seoul <- c(left = 126.826128, bottom = 37.458073,
right = 127.194848, top = 37.696073)
seoul <- get_stamenmap(bbox = bbox_seoul, zoom = 10, maptype = "toner")
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue')
LatLons = read.csv("metro_coord.csv")
LatLons=LatLons[-1:-2][-2]
#Metro_month$x = Metro_month$x / 1000
LatLons$freq = Metro_month$x
LatLons$lat = round(LatLons$lat,2)
LatLons$lon = round(LatLons$lon,2)
LatLons$freq = as.integer(LatLons$freq)
LatLons
bbox_seoul <- c(left = 126.826128, bottom = 37.458073,
right = 127.194848, top = 37.696073)
seoul <- get_stamenmap(bbox = bbox_seoul, zoom = 10, maptype = "toner")
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue')
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue') + theme_void() + labs(title="7호선역 유동인구 분포", subtitle="11월")
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue', na.rm=TRUE) + theme_void() + labs(title="7호선역 유동인구 분포", subtitle="11월")
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue', na.rm=TRUE) + theme_void() + labs(title="7호선역 유동인구 분포", subtitle="11월") + geom_text(aes(x=lon, y=lat+0.1, label="역명"), size=3)
LatLons
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue', na.rm=TRUE) + theme_void() + labs(title="7호선역 유동인구 분포", subtitle="11월") + geom_text(aes(x=lon, y=lat+0.1, label=역명), size=3)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue', na.rm=TRUE) + theme_void() + labs(title="7호선역 유동인구 분포", subtitle="11월") + geom_text(aes(x=lon, y=lat+0.001, label=역명), size=3)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue', na.rm=TRUE) + theme_void() + labs(title="7호선역 유동인구 분포", subtitle="11월") + geom_text(aes(x=lon, y=lat+0.001, label=역명), size=1)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue', na.rm=TRUE) + theme_void() + labs(title="7호선역 유동인구 분포", subtitle="11월") + geom_text(aes(x=lon, y=lat+0.001, label=역명), size=2)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue', na.rm=TRUE) + theme_void() + labs(title="7호선역 유동인구 분포", subtitle="11월") + geom_text(aes(x=lon+0.001, y=lat+0.001, label=역명), size=2)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue', na.rm=TRUE) + theme_void() + labs(title="7호선역 유동인구 분포", subtitle="11월") + geom_text(aes(x=lon, y=lat+0.004, label=역명), size=2)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue', na.rm=TRUE) + theme_void() + labs(title="7호선역 유동인구 분포", subtitle="11월") + geom_text(aes(x=lon, y=lat+0.006, label=역명), size=2)
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue', na.rm=TRUE) + theme_void() + labs(title="7호선역 유동인구 분포", subtitle="11월") + geom_text(aes(x=lon, y=lat+0.006, label=역명), size=2) + theme(axis.text.x=element_text(angle=60,hjust=1))
ggmap(seoul,
base_layer = ggplot(data = LatLons,
aes(x=lon, y = lat, alpha=freq))) +
geom_tile(fill = 'blue', na.rm=TRUE) + theme_void() + labs(title="7호선역 유동인구 분포", subtitle="11월")
ggmap(seoul,base_layer =ggplot(data = LatLons,aes(x=lon, y = lat, alpha=freq))) + geom_tile(fill='blue',na.rm=TRUE)+theme_void() + labs(title="7호선역 유동인구 분포", subtitle="11월")
#승차 그래프 시각화
ggplot(result, aes(x=time, y=day, fill=freq))+ geom_tile()+theme_minimal()+labs(title= "요일,시간별 지하철 승차 인원", subtitle="ssu_11/4~11/10", x="시간",y="인원수")
ggplot(result_d, aes(x=time_d, y=day_d, fill=freq_d))+ geom_tile()+theme_minimal()+labs(title= "요일,시간별 지하철 하차 인원", subtitle="ssu_11/4~11/10", x="시각",y="요일")+scale_color_discrete(name="유동인구수")
ggplot(result_d, aes(x=time_d, y=day_d, fill=freq_d))+ geom_tile()+theme_minimal()+labs(title= "요일,시간별 지하철 하차 인원", subtitle="ssu_11/4~11/10", x="시각",y="요일")+scale_color_discrete(name="유동인구수")
#승차 그래프 시각화
ggplot(result, aes(x=time, y=day, fill=freq))+ geom_tile()+theme_minimal()+labs(title= "요일,시간별 지하철 승차 인원", subtitle="ssu_11/4~11/10", x="시각",y="요일")+scale_color_discrete(name="유동인구수")
#승차 그래프 시각화
ggplot(result, aes(x=time, y=day, fill=freq))+ geom_tile()+theme_minimal()+labs(title= "요일,시간별 지하철 승차 인원", subtitle="ssu_11/4~11/10", x="시각",y="요일")
ggplot(result_d, aes(x=time_d, y=day_d, fill=freq_d))+ geom_tile()+theme_minimal()+labs(title= "요일,시간별 지하철 하차 인원", subtitle="ssu_11/4~11/10", x="시각",y="요일")
#4일부터 10일까지 승하차 인원
Metro_ssu = subset(Metro, Metro$역명 == "숭실대입구(살피재)")[7:20,]
#4일부터 10일까지 승하차 인원
Metro_ssu = subset(Metro, Metro$역명 == "숭실대입구(살피재)")[7:20,]
#필요없는 칼럼 제거
Metro_ssu = Metro_ssu[c(-1,-3,-4,-5)]
#요일별 승차 인원 수
up_day=Metro_ssu[-c(2,4,6,8,10,12,14),]
#요일,시간,횟수 데이터 프레임 생성(승차)
day=c()
time=c()
freq=c()
for(i in 0:3){
timex = c(i,i,i,i,i,i,i)
time=c(time,timex)
x=c("mon","tue","wed","thur","fri","sat","sun")
day = c(day, x)
freq_a = t(up_day[-2])[i+22,]
freq=c(freq, freq_a)
}
for ( i in 2:21){
timex = c(i+2,i+2,i+2,i+2,i+2,i+2,i+2)
time = c(time, timex)
x=c("mon","tue","wed","thur","fri","sat","sun")
day = c(day, x)
freq_a = t(up_day[-2])[i,]
freq=c(freq, freq_a)
}
freq = as.numeric(freq)
day = factor(day)
result = data.frame(day,time,freq)
result
#승차 그래프 시각화
ggplot(result, aes(x=time, y=day, fill=freq))+ geom_tile()+theme_minimal()+labs(title= "요일,시간별 지하철 승차 인원", subtitle="ssu_11/4~11/10", x="시각",y="요일")
#요일별 하차 인원 수
down_day=Metro_ssu[-c(1,3,5,7,9,11,13),]
#요일,시간,횟수 데이터 프레임 생성(하차)
day=c()
time=c()
freq=c()
for(i in 0:3){
timex = c(i,i,i,i,i,i,i)
time=c(time,timex)
x=c("mon","tue","wed","thur","fri","sat","sun")
day = c(day, x)
freq = t(down_day[-2])[i+22,]
freq=c(freq, freq)
}
for ( i in 2:21){
timex = c(i+2,i+2,i+2,i+2,i+2,i+2,i+2)
time = c(time, timex)
x=c("mon","tue","wed","thur","fri","sat","sun")
day = c(day, x)
freq = t(down_day[-2])[i,]
freq=c(freq, freq)
}
freq = as.numeric(freq)
day = factor(day)
result = data.frame(day,time,freq)
result
ggplot(result, aes(x=time, y=day, fill=freq))+ geom_tile()+theme_minimal()+labs(title= "요일,시간별 지하철 하차 인원", subtitle="ssu_11/4~11/10", x="시각",y="요일")
#요일별 하차 인원 수
down_day=Metro_ssu[-c(1,3,5,7,9,11,13),]
#요일,시간,횟수 데이터 프레임 생성(하차)
day_d=c()
time_d=c()
freq_d=c()
for(i in 0:3){
timex = c(i,i,i,i,i,i,i)
time_d=c(time_d,timex)
x=c("mon","tue","wed","thur","fri","sat","sun")
day_d = c(day_d, x)
freq_b = t(down_day[-2])[i+22,]
freq_d=c(freq_d, freq_b)
}
for ( i in 2:21){
timex = c(i+2,i+2,i+2,i+2,i+2,i+2,i+2)
time_d = c(time_d, timex)
x=c("mon","tue","wed","thur","fri","sat","sun")
day_d = c(day_d, x)
freq_b = t(down_day[-2])[i,]
freq_d=c(freq_d, freq_b)
}
freq_d = as.numeric(freq_d)
day_d = factor(day_d)
result_d = data.frame(day_d,time_d,freq_d)
result_d
ggplot(result_d, aes(x=time_d, y=day_d, fill=freq_d))+ geom_tile()+theme_minimal()+labs(title= "요일,시간별 지하철 하차 인원", subtitle="ssu_11/4~11/10", x="시각",y="요일")
#4일부터 10일까지 승하차 인원
Metro_ssu = subset(Metro, Metro$"역명" == "숭실대입구(살피재)")[7:20,]
#필요없는 칼럼 제거
Metro_ssu = Metro_ssu[c(-1,-3,-4,-5)]
#요일별 승차 인원 수
up_day=Metro_ssu[-c(2,4,6,8,10,12,14),]
#요일,시간,횟수 데이터 프레임 생성(승차)
day=c()
time=c()
freq=c()
for(i in 0:3){
timex = c(i,i,i,i,i,i,i)
time=c(time,timex)
x=c("mon","tue","wed","thur","fri","sat","sun")
day = c(day, x)
freq_a = t(up_day[-2])[i+22,]
freq=c(freq, freq_a)
}
for ( i in 2:21){
timex = c(i+2,i+2,i+2,i+2,i+2,i+2,i+2)
time = c(time, timex)
x=c("mon","tue","wed","thur","fri","sat","sun")
day = c(day, x)
freq_a = t(up_day[-2])[i,]
freq=c(freq, freq_a)
}
freq = as.numeric(freq)
day = factor(day)
result = data.frame(day,time,freq)
result
#승차 그래프 시각화
ggplot(result, aes(x=time, y=day, fill=freq))+ geom_tile()+theme_minimal()+labs(title= "요일,시간별 지하철 승차 인원", subtitle="ssu_11/4~11/10", x="시각",y="요일")
#요일별 하차 인원 수
down_day=Metro_ssu[-c(1,3,5,7,9,11,13),]
#요일,시간,횟수 데이터 프레임 생성(하차)
day_d=c()
time_d=c()
freq_d=c()
for(i in 0:3){
timex = c(i,i,i,i,i,i,i)
time_d=c(time_d,timex)
x=c("mon","tue","wed","thur","fri","sat","sun")
day_d = c(day_d, x)
freq_b = t(down_day[-2])[i+22,]
freq_d=c(freq_d, freq_b)
}
for ( i in 2:21){
timex = c(i+2,i+2,i+2,i+2,i+2,i+2,i+2)
time_d = c(time_d, timex)
x=c("mon","tue","wed","thur","fri","sat","sun")
day_d = c(day_d, x)
freq_b = t(down_day[-2])[i,]
freq_d=c(freq_d, freq_b)
}
day_d = factor(day_d)
result_d = data.frame(day_d,time_d,freq_d)
result_d
ggplot(result_d, aes(x=time_d, y=day_d, fill=freq_d))+ geom_tile()+theme_minimal()+labs(title= "요일,시간별 지하철 하차 인원", subtitle="ssu_11/4~11/10", x="시각",y="요일")
ggplot(result_d, aes(x=time_d, y=day_d, fill=freq_d))+ geom_tile()+theme_minimal()+labs(title= "요일,시간별 지하철 하차 인원", subtitle="ssu_11/4~11/10", x="시각",y="요일")
#요일별 하차 인원 수
down_day=Metro_ssu[-c(1,3,5,7,9,11,13),]
#요일,시간,횟수 데이터 프레임 생성(하차)
day_d=c()
time_d=c()
freq_d=c()
for(i in 0:3){
timex = c(i,i,i,i,i,i,i)
time_d=c(time_d,timex)
x=c("mon","tue","wed","thur","fri","sat","sun")
day_d = c(day_d, x)
freq_b = t(down_day[-2])[i+22,]
freq_d=c(freq_d, freq_b)
}
for ( i in 2:21){
timex = c(i+2,i+2,i+2,i+2,i+2,i+2,i+2)
time_d = c(time_d, timex)
x=c("mon","tue","wed","thur","fri","sat","sun")
day_d = c(day_d, x)
freq_b = t(down_day[-2])[i,]
freq_d=c(freq_d, freq_b)
}
freq_d = as.numeric(freq_d)
day_d = factor(day_d)
result_d = data.frame(day_d,time_d,freq_d)
result_d
ggplot(result_d, aes(x=time_d, y=day_d, fill=freq_d))+ geom_tile()+theme_minimal()+labs(title= "요일,시간별 지하철 하차 인원", subtitle="ssu_11/4~11/10", x="시각",y="요일")
