confusionMatrix(Bank_test_pred3, validation_set_labels3)
#93.62
Bank_test_pred3 <- knn(train = Bank_train3, test = validation_set3, cl = Bank_train_labels3, k = 57)
confusionMatrix(Bank_test_pred3, validation_set_labels3)
Bank = read.csv('CommonBank.csv', stringsAsFactors=FALSE)
#id와 zip.code삭제
Bank = subset(Bank, select=-c(ID, ZIP.Code))
Bank$PersonalLoan = factor(Bank$PersonalLoan, levels=c(1,0), labels=c("가입","미가입"))
#라벨링할 칼럼 삭제
Bank_n = subset(Bank, select=-c(PersonalLoan))
#라벨링 칼럼 생성
Bank_l = subset(Bank, select=c(PersonalLoan))
#z_normalize를 적용하여 데이터프레이으로 변환
bank_z=as.data.frame(lapply(Bank_n[1:11], z_normalize))
str(Bank_m)
str(Bank_n)
str(Bank_l)
Bank_train = Bank_n[1:4000,]
Bank_test = Bank_n[4001:5000,]
Bank_train_label = Bank_l[1:4000,]
Bank_test_labels = Bank_l[4001:5000,]
str(Bank_train)
str(Bank_test)
str(Bank_train_label)
str(Bank_train_label)
Bank_train_labels = Bank_l[1:4000,]
Bank_test_labels = Bank_l[4001:5000,]
str(Bank_train_labels)
str(Bank_test_labels)
Bank = read.csv('CommonBank.csv', stringsAsFactors=FALSE)
#id와 zip.code삭제
Bank = subset(Bank, select=-c(ID, ZIP.Code))
Bank$PersonalLoan = factor(Bank$PersonalLoan, levels=c(1,0), labels=c("가입","미가입"))
str(Bank)
Bank_train = Bank[1:4000,]
Bank_test = Bank[4001:5000,]
Bank_train_labels = Bank[1:4000,8]
Bank_test_labels = Bank[4001:5000,8]
str(Bank_train_labels)
Bank_train = Bank[1:4000,]
Bank_test = Bank[4001:5000,]
Bank_train_labels4 = Bank[1:4000,8]
Bank_test_labels4 = Bank[4001:5000,8]
str(Bank_train_labels4)
z_normalized <- c("center", "scale")
cv <- trainControl(method="repeatedcv", number = 5, repeats = 5)
tune_grid <- expand.grid(k = seq(1, 99, 2))
knn_fit = train(data=Bank_train, PersonalLoan~.,method="knn", trControl=cv,preProcess=z_normalized,tuneGrid=tune_grid )
knn_fit
ggplot(knn_fit)+theme_bw()
#최종 모델에 test set 적용
test_pred = predict(knn_fit, Bank_test)
#최종 모델에 test set 적용
test_pred = predict(knn_fit, Bank_test)
confusionMatrix(test_pred, Bank_test_labels4)
install.packages("ISLR")
library(ISLR)
str(Hitters)
summary(Hitters)
Hitters = na.omit(Hitters)
str(Hitters)
install.packages("rsample")
library(rsample)
set.seed(123)
split = initial_split(Hitters, prop=0.7, strata="Salary")
Hitters_train = training(split)
Hitters_test = testing(split)
#파일 읽기
Bank = read.csv('CommonBank.csv', stringsAsFactors=FALSE)
#id와 zip.code삭제
Bank = subset(Bank, select=-c(ID, ZIP.Code))
#라벨링 칼럼 factor로 바꿈
Bank$PersonalLoan = factor(Bank$PersonalLoan, levels=c(1,0), labels=c("가입","미가입"))
#라벨링할 칼럼 삭제(z_normalized를 라벨링할 칼럼과 분리하여 적용하기 위함)
Bank_n = subset(Bank, select=-c(PersonalLoan))
#라벨링 칼럼 생성
Bank_l = subset(Bank, select=c(PersonalLoan))
#z_normalize-1
z_normalize = function(x){
+ return ((x-mean(x))/sd(x))}
#z_normalize-2// 두개의 방법 비교 결과 위에 함수식이 잘 동작한다는 것을 알 수 있음.(값이 길어 주석처리)
#scale(Bank[1], center=TRUE, scale=TRUE)
#z_normalize를 적용한 후 데이터프레임으로 변환
bank_z=as.data.frame(lapply(Bank_n[1:11], z_normalize))
#train, test dataset 분리
Bank_train = bank_z[1:4000,]
Bank_test = bank_z[4001:5000,]
Bank_train_labels = Bank_l[1:4000,]
Bank_test_labels =Bank_l[4001:5000,]
#training dataset target variable 분포
Bank_train_labelsv = as.data.frame(Bank_l[1:4000,])
names(Bank_train_labelsv)=c("PersonalLoan")
#test dataset target variable 분포
Bank_test_labelsv= as.data.frame(Bank_l[4001:5000,])
names(Bank_test_labelsv)=c("PersonalLoan")
ggplot(data=Bank_train_labelsv, aes(x=PersonalLoan))+geom_bar()+geom_bar(data=Bank_test_labelsv, aes(x=PersonalLoan, corlor="red"))
# 사용할 패키지 추가
library(ggplot2)
library(tidyr)
library(dplyr)
library(ggthemes)
library(class)
library(caret)
ggplot(data=Bank_train_labelsv, aes(x=PersonalLoan))+geom_bar()+geom_bar(data=Bank_test_labelsv, aes(x=PersonalLoan, corlor="red"))
ggplot(data=Bank_train_labelsv, aes(x=PersonalLoan))+geom_bar()+geom_bar(data=Bank_test_labelsv, aes(x=PersonalLoan, color="red"))
?geom_bar
ggplot(data=Bank_train_labelsv, aes(x=PersonalLoan))+geom_bar(position = "stack")+geom_bar(data=Bank_test_labelsv, aes(x=PersonalLoan, color="red"))
?geom_bar
ggplot(data=Bank_train_labelsv, aes(x=PersonalLoan))+geom_bar(inherit.aes = TRUE)+geom_bar(data=Bank_test_labelsv, aes(x=PersonalLoan, color="red"))
ggplot(data=Bank_train_labelsv, aes(x=PersonalLoan))+geom_bar(width=3)+geom_bar(data=Bank_test_labelsv, aes(x=PersonalLoan, color="red"))
ggplot(data=Bank_train_labelsv, aes(x=PersonalLoan))+geom_bar(width=9)+geom_bar(data=Bank_test_labelsv, aes(x=PersonalLoan, color="red"))
ggplot(data=Bank_train_labelsv, aes(x=PersonalLoan))+geom_bar(width=0.5)+geom_bar(data=Bank_test_labelsv, aes(x=PersonalLoan, color="red"))
ggplot(data=Bank_train_labelsv, aes(x=PersonalLoan))+geom_bar(width=0.5)+geom_bar(data=Bank_test_labelsv, aes(x=PersonalLoan),color="red")
ggplot(data=Bank_train_labelsv, aes(x=PersonalLoan))+geom_bar(width=0.5)+geom_bar(width=0.5,data=Bank_test_labelsv, aes(x=PersonalLoan),color="red")
getwd()
?nrow\
?nrow
?aapply
?apply
getwd()
library(leaps)
install.packages("leaps")
library(ISLR)
Hitters = na.omit(Hitters)
library(rsample)
se.seed(123)
set.seed(123)
split = initial_split(Hitters, prop=0.7, strata = "Salary")
Hitters_train = training(split)
Hitters_test = testing(split)
str(Hitters_train)
str(Hitters_test)
library(leaps)
reg_full = regsubsets(Salary~., data=Hitters_train, nvmax=19)
reg_summary = summary(reg_full)
reg_summary$rsq
S = rolldie(4)
?rolldie
??rolldie
library(Rstat)
S = rolldie(4)
library(prob)
S = rolldie(4)
s
S
A = subset(S, x1=1)
A
?subset
A = subset(S, x1="1")
A
A = subset(S, x1=="1")
A = subset(S, X1=="1")
A
apply(S,1,sum)>15
A = subset(S, apply(S,1,sum)>15)
A
C = subset(S, apply(S, 1, max)==6)
B = subset(S, apply(S, 1, max)==6)
C = subset(S, apply(S,1,min)==1)
AB = intersect(A,B)
AB
?rownames
rownames(A)
venn(list(A,B,C), showSet=T)
?venn
??venn
library(gplots)
venn(list(A,B,C), showSet=T)
AV = rownames(A)
BV = rownames(B)
CV = rownames(C)
venn(list(AV,BV,CV),showSet=T)
AuB = union(A,B)
AuC = union(A,C);pprt(AuC,N)
N = nrow(S)
N
BuC = union(B,C);pprt(BuC,N)
AuBuC = union(A,BUC); pprt(AuBuC,N)
AuBuC = union(A,BuC); pprt(AuBuC,N)
AuB = union(A,B);pprt(AuB,N)
A = subset(S, apply(S,1, sum)>=15) ; pprt(A,nrow(S))
AuB = union(A,B);pprt(AuB,N)
S = rolldie(4)
N = nrow(S)
is.stra = function(x){all(diff(sort(x))==1)}
diff(c(1,2,3,4))
all(diff(c(1,2,3,4)))
?all
all(diff(c(1,2,3,4))==1)
all(diff(c(1,2,3,4))==1)
all(diff(c(1,2,3,4))==2)
stra = subset(S, apply(S,1,is.stra));;pprt(stra,N)
stra = subset(S, apply(S,1,is.stra));pprt(stra,N)
apply(S,1,is.stra)
stra = subset(S, apply(S,1,is.stra))
stra
Bc = setdiff(S,B)
Ac = setdiff(S,A)
Cc = setdiff(S,C)
ABc = intersect(A,Bc)
pprt(ABc, N)
AcBc=intersect(Ac,Bc);pprt(AcBc,N)
AB = intersect(A,B)
ABCc=intersect(AB,Cc);pprt(ABCc,N)
ABcC = intersect(ABc,C);pprt(ABcC,N)
cprt(A,B);cprt(A,C);cprt(A,BC);cprt(A,BuC)
BC = intersect(B,C)
cprt(A,B);cprt(A,C);cprt(A,BC);cprt(A,BuC)
CD = rep(c("c","d","h","s"), each=13)
CD
CD4 = urnsamples(CD,4);(N4 =nrow(CD4))
sameS = function(x){length(unique(x))==1}
CD4
flush = subset(CD4, apply(CD4, 1, sameS))
pprt(flush,N4)
S = rolldie(5); N=nrow(S)
even = function(x){(sum(x)%%2)==0}
span5 = function(x){((max(x)-min(x))==5}
span5 = function(x){(max(x)-min(x))==5}
A = subset(S, apply(S,1,even));pprt(A,N)
B = subset(S, apply(S,1,span5));pprt(B,N)
indep.event(A,B,N)
x=mtcars
str(x)
x['cyl']
x['cyl'==4,]$mpg
x['cyl'=='4',]$mpg
x['cyl'=='4','mpg']
x['cyl'=='4',]
x['cyl'==4,]
mean(table(x$cyl,x$mpg))
table(x$cyl,x$mpg)
x['mpg']
x['mpg'==21.0]
aggregate(x$mpg, by=list(x$cyl))
aggregate(x$mpg, by=list(x$cyl),FUN=mean)
x[c('mpg','cyl')]
z=21+21+21.4+18.1+19.2+17.8+19.7
z/7
?cut
cut(x$wt, breaks=1:6)
x=cut(x$wt, breaks=1:6)
x
x[1]
x[2]
str(x)
x['(1,3]']
x['(1,2]']
x[(1,2]]
x['(1,2]']
x=c(1,2,3,4,5,6,7,8,9)
x=cut(x$wt, breaks=1:6)
x=mtcars
x=cut(x$wt, breaks=1:6)
mean(x)
v=c(40,50,60,55,45)
b=c(70,60,35,55,30)
table(v,b)
x=cut(x$wt, breaks=1:6)
x=mtcars
x=cut(x$wt, breaks=1:6)
x
x=cut(x$wt, breaks=1:6,labels=c(1,2,3,4,5))
x=mtcars
x=cut(x$wt, breaks=1:6,labels=c(1,2,3,4,5))
x
x['1']
x=1
x=mtcars
z=cut(x$wt, breaks=1:6,labels=c(1,2,3,4,5))
z
b=mtcars
z=cut(b$wt, breaks=1:6,labels=c(1,2,3,4,5))
z
order(z)
x=c(1,2,3,4,5,6,7,8,9)
3C4
max
s=c(1,2,3,4,5)
s=rolldie(3)
library(Rstat)
library(prob)
s=rolldie(2)
c=subset(s, apply(s,1,max-min)<5)
c=subset(s, apply(s,1,max(s)-min(s))<5)
c=subset(s, apply(s,1,count(1))>=1)
b=mtcars
z=cut(b$wt, breaks=1:6,labels=c(1,2,3,4,5))
z
z==1
z=z==1
z
b[z,]$mpg
r=b[z,]$mpg
mean(r)
z=z==2
mena(b[z,]$mpg)
mean(b[z,]$mpg)
r=b[z,]$mpg
z=cut(b$wt, breaks=1:6,labels=c(1,2,3,4,5))
z
r=z==1
r
mean(b[r,]$mpg)
b=z==2
b=mtcars
z=cut(b$wt, breaks=1:6,labels=c(1,2,3,4,5))
r=z==1
m=z==2
l=z==3
k=z==4
p=z==5
mean(b[m,]$mpg)
mean(b[r,]$mpg)
mean(b[l,]$mpg)
mean(b[k,]$mpg)
mean(b[p,]$mpg)
library(pls)
install.packages(pls)
install.packages("pls")
library(pls)
library(ISLR)
Hitters = na.omit(Hitters)
set.seed(123)
split <- initial_split(Hitters, prop = 0.7, strata = "Salary")
Hitters_train <- training(split)
Hitters_test <- testing(split)
library(rsample)
library(caret)
split <- initial_split(Hitters, prop = 0.7, strata = "Salary")
Hitters_train <- training(split)
Hitters_test <- testing(split)
library(Rstat)
ch4.man
ch4.man()
library(prob)
S = tosscoin(4)
countT = function(x){sum(x=='T')}
X=apply(S,1,countT)
table(X)
prop.table(table(x))
prop.table(table(X))
S = tosscoion(3)
S = tosscoin(3)
X = apply(S,1,countT)
prop.table(table(X))
table(X)
rolldie.sum(4)
rolldie.sum(5, cex=0.8)
hyp.sample(50,8,10)
hyp.sample(500,80,10)
pdf = function(x) 2*exp(-2*x)*(x>0)
integrate(pdf, 0,1)
integrate(pdf, 0,1)[[1]]
integrate(pdf, 0,Inf)[[1]]
freq = choose(3,0:3)
for (k in 3:20){ freq=choose(k,0:k) disc.cdf(0:k,freq.mt=paste("cdf of tails in",k,"coins"),cex=0.6)}
for (k in 3:20){ freq=choose(k,0:k) disc.cdf(0:k,freq.mt=paste("cdf of tails in",k,"coins"),cex=0.6)
for (k in 3:20){ freq=choose(k,0:k)
disc.cdf(0:k,freq,mt=paste("cdf of",k,"cd"))
}
sdf
S = rolldie(2)
N=nrow(S)
X = apply(S,1,max)
table(X)
str(X)
str(S)
S
Y = apply(S,1,min)
table(Y)
table(X,Y)
Y
X
disc.joint2(X,Y)
install.packages("scateerplot3d")
install.packages("scatterplot3d")
library(scatterplot3d)
disc.joint2(X,Y,prt=F,plot=T)
X = apply(S,1,mean); table(X)
Y = apply(S,1,sum); table(Y)
pdf = function(a,b,x,y)=2/(a+b)*(a*x+b*y)*(x>0&x<1)*(y>0&y<1)
pdf = function(a,b,x,y)2/(a+b)*(a*x+b*y)*(x>0&x<1)*(y>0&y<1)
pdf1 = function(x,y) pdf(1,1,x,y)
pdf2 = function(x,y) pdf(2,5,x,y)
pdf3 = function(x,y) pdf(3,15,x,y)
cont.jcdf(pdf1)
cont.jcdf(pdf1,Inf,Inf)
cont.jcdf(pdf3,1,1)
pdf
pdf = function(a,b,x,y)2/(a+b)*(a*x+b*y)*(x>=0&x<=1)*(y>=0&y<=1)
pdf
pdf1 = function(x,y) pdf(1,1,x,y)
cont.cond2(pdf1, yc=0.1,xs=0:2/2,lo=-0.2,up=1.2)
data =mrcars
data =mtcars
data
str(data)
tapply(data$mpg, data$cyl, mean)
cut(data, breaks=1:6)
cut(data$wt, breaks=1:6)
wt_l = cut(data$wt, breaks=1:6)
tapply(data$mpg, wt_l, mean)
urnsample(1:10,4)
library(Rstat)
urnsample(1:10,4)
urnsample2(1:10,4)
data = urnsample2(1:10,4)
str(data)
A=subset(data,apply(data,1,sum)>=20)
haveb = function(x){3 %in% x}
haveb(c(4,5))
haveb(c(4,5,3))
B=subset(data,apply(data,1,haveb)=='TRUE')
B
calc = function(x){max(x)=min(x)}
calc = function(x){max(x)-min(x)}
C=subset(data,apply(data,1,calc)<=7)
C
N =nrow(data)
N
pprt(A,N)
pprt(B,N)
pprt(C,N)
Cc=setdiff2(S,c)
Cc=setdiff2(data,c)
Cc=setdiff2(data,C)
Cc
length(Cc)
str(Cc)
str(C)
BnCc = intersect(B,Cc)
BnCc
BnCc = intersect2(B,Cc)
BnCc
cprt(A,BnCc)
AUCc = union2(A,Cc)
cprt(AUCc,B)
pop =c(20,25,25,20,10);att=c(40,45,55,55,60);pref=c(75,55,35,45,30)
ratt=pop*att
ratt
pri = ratt/sum(ratt)
pri
appr=pri*pref;sum(appr)
appr
pop =c(20,25,25,20,10);att=c(40,45,55,55,60);pref=c(75,55,35,45,30)
ratt=pop*att;
ratt
pri = ratt/sum(ratt)
appr = pri*pref
appr
sum(appr)
pop =c(0.2,0.25,0.25,0.2,0.1);att=c(0.4,0.45,0.55,0.55,0.6);pref=c(0.75,0.55,0.35,0.45,0.3)
ratt=pop*att; pri = ratt/sum(ratt)
appr = pri*pref; sum(appr)
post = appr/sum(appr)
post
sum(post[4:5])
appr
post
rat2 = ratt[-1]; pri2 = rat2/sum(rat2)
app2 = pri2*pref[-1];sum(app2)
post2 = app2/sum(app2)
sum(post2[3:4])
E = rnorm(200, mean=0, sd=4)
X = rnorm(200, mean=0, sd=1)
X_2 = X*X ; X_3=X*X*X; X_4=X*X*X*X; X_5=X*X*X*X*X; X_6=X*X*X*X*X*X;X_7=X*X*X*X*X*X*X;X_8=X*X*X*X*X*X*X*X;X_9=X*X*X*X*X*X*X*X*X;X_10=X*X*X*X*X*X*X*X*X*X;
Y=1+2*X-3*X_3+4*X_3+E
data = data.frame(X,X_2,X_3,X_4,X_5,X_6,X_7,X_8,X_9,X_10,Y)
ggpairs(data[c(1:11)])
library(psych)
library(caret)
ggpairs(data[c(1:11)])
library(GGally)
ggpairs(data[c(1:11)])
modeld=lm(Y~X+X_2+X_3, data=data)
summary(modeld)
modelc=lm(Y~.,data=data)
summary(modelc)
E = rnorm(200, mean=0, sd=4)
X = rnorm(200, mean=0, sd=1)
X_2 = X*X ; X_3=X*X*X; X_4=X*X*X*X; X_5=X*X*X*X*X; X_6=X*X*X*X*X*X;X_7=X*X*X*X*X*X*X;X_8=X*X*X*X*X*X*X*X;X_9=X*X*X*X*X*X*X*X*X;X_10=X*X*X*X*X*X*X*X*X*X;
Y=1+2*X-3*X_3+4*X_3+E
data = data.frame(X,X_2,X_3,X_4,X_5,X_6,X_7,X_8,X_9,X_10,Y)
modelc=lm(Y~.,data=data)
summary(modelc)
random.seed(123)
set.seed(123)
E = rnorm(200, mean=0, sd=4)
set.seed(1)
X = rnorm(200, mean=0, sd=1)
E
X
X_2 = X*X ; X_3=X*X*X; X_4=X*X*X*X; X_5=X*X*X*X*X; X_6=X*X*X*X*X*X;X_7=X*X*X*X*X*X*X;X_8=X*X*X*X*X*X*X*X;X_9=X*X*X*X*X*X*X*X*X;X_10=X*X*X*X*X*X*X*X*X*X;
Y=1+2*X-3*X_3+4*X_3+E
data = data.frame(X,X_2,X_3,X_4,X_5,X_6,X_7,X_8,X_9,X_10,Y)
ggpairs(data[c(1:11)])
modelc=lm(Y~.,data=data)
summary(modelc)
set.seed(123)
E = rnorm(200, mean=0, sd=4)
set.seed(1)
X = rnorm(200, mean=0, sd=1)
X_2 = X*X ; X_3=X*X*X; X_4=X*X*X*X; X_5=X*X*X*X*X; X_6=X*X*X*X*X*X;X_7=X*X*X*X*X*X*X;X_8=X*X*X*X*X*X*X*X;X_9=X*X*X*X*X*X*X*X*X;X_10=X*X*X*X*X*X*X*X*X*X;
Y=1+2*X-3*X_3+4*X_3+E
data = data.frame(X,X_2,X_3,X_4,X_5,X_6,X_7,X_8,X_9,X_10,Y)
modelc=lm(Y~.,data=data)
summary(modelc)
modeld=lm(Y~X+X_2+X_3, data=data)
summary(modeld)
setwd("C:/Users/seook/Documents/21-1데이터분석및활용(R)/data")
git
